# CENG435-TermProject2
Data Communication and Networking


1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
5) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

For test the script against the packet loss percentage:

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 0.5% corrupt 0% duplicate 0% delay 3 ms reorder 0% 0% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 10% corrupt 0% duplicate 0% delay 3 ms reorder 0% 0% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 20% corrupt 0% duplicate 0% delay 3 ms reorder 0% 0% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

For test the script against the corruption percentage:

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 0% corrupt 0.2% duplicate 0% delay 3 ms reorder 0% 0% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss corrupt 10% duplicate 0% delay 3 ms reorder 0% 0% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 0% corrupt 20% duplicate 0% delay 3 ms reorder 0% 0% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.


For test the script against the reordering percentage:

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 0% corrupt 0% duplicate 0% delay 3 ms reorder 1% 50% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 0% corrupt 0% duplicate 0% delay 3 ms reorder 10% 50% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.

1) Make ssh connection for source, broker and destination.
2) Create a input.txt file with include 5 million keyboard characters (5 mb text file) on source ssh.
3) To use routers as gateways type following commands on broker terminal: "route add -net 10.10.3.2 netmask 255.255.255.254 gw
10.10.2.2 dev eth2" and "route add -net 10.10.5.2 netmask 255.255.255.254 gw 10.10.4.2 dev eth1", and type following commands on destination: "route add -net 10.10.2.1 netmask 255.255.254.0 gw 10.10.3.1
dev eth2" and "route add -net 10.10.1.2 netmask 255.255.255.254 gw 10.10.5.1 dev eth2".
4) tc qdisc change dev [INTERFACE] root netem loss 0% corrupt 0% duplicate 0% delay 3 ms reorder 35% 50% for eth0,eth1,eth2, and eth3 on broker; for eth0,eth1 and eth2 on destination.
5) Execute python scripts on each connections
	python source.py on source ssh
	python broker.py on broker ssh
	python destination.py on destination ssh
6) After the see successful! on destination terminal then you can see sended file as output.txt.
Please note that the source and broker script might be crushed but this is not a problem, the file will be sent successfuly.
